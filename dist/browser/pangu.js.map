{"version":3,"file":"pangu.js","sources":["../../src/browser/pangu.ts"],"sourcesContent":["import { Pangu } from '../shared';\n\nexport interface AutoSpacingPageConfig {\n  pageDelayMs?: number;\n  nodeDelayMs?: number;\n  nodeMaxWaitMs?: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction once<T extends (...args: any[]) => any>(func: T) {\n  let executed = false;\n  return function (...args: Parameters<T>) {\n    if (executed) {\n      return undefined;\n    }\n    executed = true;\n    return func(...args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction debounce<T extends (...args: any[]) => void>(func: T, delay: number, mustRunDelay: number = Infinity) {\n  let timer: number | null = null;\n  let startTime: number | null = null;\n\n  return function (...args: Parameters<T>) {\n    const currentTime = Date.now();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    if (!startTime) {\n      startTime = currentTime;\n    }\n\n    if (currentTime - startTime >= mustRunDelay) {\n      func(...args);\n      startTime = currentTime;\n    } else {\n      timer = window.setTimeout(() => {\n        func(...args);\n      }, delay);\n    }\n  };\n}\n\nexport class BrowserPangu extends Pangu {\n  public isAutoSpacingPageExecuted: boolean;\n  protected autoSpacingPageObserver: MutationObserver | null;\n\n  public blockTags: RegExp;\n  public ignoredTags: RegExp;\n  public presentationalTags: RegExp;\n  public spaceLikeTags: RegExp;\n  public spaceSensitiveTags: RegExp;\n  public ignoredClass: string;\n\n  constructor() {\n    super();\n\n    this.isAutoSpacingPageExecuted = false;\n    this.autoSpacingPageObserver = null;\n\n    this.blockTags = /^(div|p|h1|h2|h3|h4|h5|h6)$/i;\n    this.ignoredTags = /^(code|pre|script|style|textarea|iframe|input)$/i;\n    this.presentationalTags = /^(b|code|del|em|i|s|strong|kbd)$/i;\n    this.spaceLikeTags = /^(br|hr|i|img|pangu)$/i;\n    this.spaceSensitiveTags = /^(a|del|pre|s|strike|u)$/i;\n    this.ignoredClass = 'no-pangu-spacing';\n  }\n\n  public autoSpacingPage({ pageDelayMs = 1000, nodeDelayMs = 500, nodeMaxWaitMs = 2000 }: AutoSpacingPageConfig = {}) {\n    if (!(document.body instanceof Node)) {\n      return;\n    }\n\n    if (this.isAutoSpacingPageExecuted) {\n      return;\n    }\n\n    this.isAutoSpacingPageExecuted = true;\n\n    // FIXME\n    // Dirty hack for https://github.com/vinta/pangu.js/issues/117\n    const spacingPageOnce = once(() => {\n      this.spacingPage();\n    });\n    const videos = document.getElementsByTagName('video');\n    if (videos.length === 0) {\n      setTimeout(() => {\n        spacingPageOnce();\n      }, pageDelayMs);\n    } else {\n      for (let i = 0; i < videos.length; i++) {\n        const video = videos[i];\n        if (video.readyState === 4) {\n          setTimeout(() => {\n            spacingPageOnce();\n          }, 3000);\n          break;\n        }\n        video.addEventListener('loadeddata', () => {\n          setTimeout(() => {\n            spacingPageOnce();\n          }, 4000);\n        });\n      }\n    }\n\n    this.setupAutoSpacingPageObserver(nodeDelayMs, nodeMaxWaitMs);\n  }\n\n  public spacingPage() {\n    this.spacingPageTitle();\n    this.spacingPageBody();\n  }\n\n  public spacingPageTitle() {\n    const xPathQuery = '/html/head/title/text()';\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingPageBody() {\n    // // >> 任意位置的節點\n    // . >> 當前節點\n    // .. >> 父節點\n    // [] >> 條件\n    // text() >> 節點的文字內容，例如 hello 之於 <tag>hello</tag>\n    // https://www.w3schools.com/xml/xpath_syntax.asp\n    //\n    // [@contenteditable]\n    // 帶有 contenteditable 屬性的節點\n    //\n    // normalize-space(.)\n    // 當前節點的頭尾的空白字元都會被移除，大於兩個以上的空白字元會被置換成單一空白\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/normalize-space\n    //\n    // name(..)\n    // 父節點的名稱\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/name\n    //\n    // translate(string, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\")\n    // 將 string 轉換成小寫，因為 XML 是 case-sensitive 的\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/translate\n    //\n    // 1. 處理 <title>\n    // 2. 處理 <body> 底下的節點\n    // 3. 略過 contentEditable 的節點\n    // 4. 略過特定節點，例如 <script> 和 <style>\n    //\n    // 注意，以下的 query 只會取出各節點的 text 內容！\n    let xPathQuery = '/html/body//*/text()[normalize-space(.)]';\n    for (const tag of ['script', 'style', 'textarea']) {\n      // 理論上這幾個 tag 裡面不會包含其他 tag\n      // 所以可以直接用 .. 取父節點\n      // 例如 [translate(name(..), \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\") != \"script\"]\n      xPathQuery = `${xPathQuery}[translate(name(..),\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"abcdefghijklmnopqrstuvwxyz\")!=\"${tag}\"]`;\n    }\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingNode(contextNode: Node) {\n    // Use .//text() to include all text nodes, not just those that are children of elements\n    // This handles cases like <div><span>社</span>\"<span>DF</span></div>\n    // where the quote is a direct child of the div\n    const xPathQuery = './/text()[normalize-space(.)]';\n    this.spacingNodeByXPath(xPathQuery, contextNode);\n  }\n\n  public spacingElementById(idName: string) {\n    const xPathQuery = `id(\"${idName}\")//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingElementByClassName(className: string) {\n    const xPathQuery = `//*[contains(concat(\" \", normalize-space(@class), \" \"), \"${className}\")]//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingElementByTagName(tagName: string) {\n    const xPathQuery = `//${tagName}//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  public spacingNodeByXPath(xPathQuery: string, contextNode: Node) {\n    // DocumentFragments don't support XPath queries\n    if (!(contextNode instanceof Node) || contextNode instanceof DocumentFragment) {\n      return;\n    }\n\n    // 因為 xPathQuery 會是用 text() 結尾，所以這些 nodes 會是 text 而不是 DOM element\n    // snapshotLength 要配合 XPathResult.ORDERED_NODE_SNAPSHOT_TYPE 使用\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate\n    // https://developer.mozilla.org/en-US/docs/Web/API/XPathResult\n    const textNodes = document.evaluate(xPathQuery, contextNode, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n\n    let currentTextNode: Node | null;\n    let nextTextNode: Node | null = null;\n\n    // 從最下面、最裡面的節點開始，所以是倒序的\n    for (let i = textNodes.snapshotLength - 1; i > -1; --i) {\n      currentTextNode = textNodes.snapshotItem(i);\n      if (!currentTextNode) {\n        continue;\n      }\n\n      // Skip presentational tag handling - it's causing issues with fragmented nodes\n      // The main spacing logic below handles most cases correctly\n\n      if (this.canIgnoreNode(currentTextNode)) {\n        nextTextNode = currentTextNode;\n        continue;\n      }\n\n      if (currentTextNode instanceof Text) {\n        // Special handling for standalone quote nodes\n        if (currentTextNode.data.length === 1 && (currentTextNode.data === '\"' || currentTextNode.data === '\"' || currentTextNode.data === '\"')) {\n          // Check context to determine if space is needed before the quote\n          if (currentTextNode.previousSibling) {\n            const prevNode = currentTextNode.previousSibling;\n            if (prevNode.nodeType === Node.ELEMENT_NODE && prevNode.textContent) {\n              const lastChar = prevNode.textContent.slice(-1);\n              // If previous element ends with CJK, add space before quote\n              if (/[\\u4e00-\\u9fff]/.test(lastChar)) {\n                currentTextNode.data = ` ${currentTextNode.data}`;\n              }\n            }\n          }\n        } else {\n          // Normal text processing\n          const newText = this.spacingText(currentTextNode.data);\n          if (currentTextNode.data !== newText) {\n            currentTextNode.data = newText;\n          }\n        }\n      }\n\n      // 處理嵌套的 <tag> 中的文字\n      if (nextTextNode) {\n        // TODO\n        // 現在只是簡單地判斷相鄰的下一個 node 是不是 <br>\n        // 萬一遇上嵌套的標籤就不行了\n        if (currentTextNode.nextSibling && this.spaceLikeTags.test(currentTextNode.nextSibling.nodeName)) {\n          nextTextNode = currentTextNode;\n          continue;\n        }\n\n        // currentTextNode 的最後一個字 + nextTextNode 的第一個字\n        if (!(currentTextNode instanceof Text) || !(nextTextNode instanceof Text)) {\n          continue;\n        }\n        \n        // Check if there's already proper spacing between nodes\n        const currentEndsWithSpace = currentTextNode.data.endsWith(' ');\n        const nextStartsWithSpace = nextTextNode.data.startsWith(' ');\n        \n        // If either node already has space at the boundary, skip processing\n        if (currentEndsWithSpace || nextStartsWithSpace) {\n          nextTextNode = currentTextNode;\n          continue;\n        }\n        \n        const testText = currentTextNode.data.slice(-1) + nextTextNode.data.slice(0, 1);\n        const testNewText = this.spacingText(testText);\n        \n        // Special handling for quotes to prevent breaking quoted content\n        const currentLast = currentTextNode.data.slice(-1);\n        const nextFirst = nextTextNode.data.slice(0, 1);\n        const isQuote = (char: string) => char === '\"' || char === '\"' || char === '\"';\n        const isCJK = (char: string) => /[\\u4e00-\\u9fff]/.test(char);\n        \n        // Skip spacing in these cases:\n        // 1. Quote followed by CJK (e.g., \"中)\n        // 2. CJK followed by quote (e.g., 容\")\n        const skipSpacing = (\n          (isQuote(currentLast) && isCJK(nextFirst)) ||\n          (isCJK(currentLast) && isQuote(nextFirst))\n        );\n        \n        if (testNewText !== testText && !skipSpacing) {\n          // 往上找 nextTextNode 的 parent node\n          // 直到遇到 spaceSensitiveTags\n          // 而且 nextTextNode 必須是第一個 text child\n          // 才能把空格加在 nextTextNode 的前面\n          let nextNode: Node = nextTextNode;\n          while (nextNode.parentNode && !this.spaceSensitiveTags.test(nextNode.nodeName) && this.isFirstTextChild(nextNode.parentNode, nextNode)) {\n            nextNode = nextNode.parentNode;\n          }\n\n          let currentNode: Node = currentTextNode;\n          while (currentNode.parentNode && !this.spaceSensitiveTags.test(currentNode.nodeName) && this.isLastTextChild(currentNode.parentNode, currentNode)) {\n            currentNode = currentNode.parentNode;\n          }\n\n          if (currentNode.nextSibling) {\n            if (this.spaceLikeTags.test(currentNode.nextSibling.nodeName)) {\n              nextTextNode = currentTextNode;\n              continue;\n            }\n          }\n\n          if (!this.blockTags.test(currentNode.nodeName)) {\n            if (!this.spaceSensitiveTags.test(nextNode.nodeName)) {\n              if (!this.ignoredTags.test(nextNode.nodeName) && !this.blockTags.test(nextNode.nodeName)) {\n                if (nextTextNode.previousSibling) {\n                  if (!this.spaceLikeTags.test(nextTextNode.previousSibling.nodeName)) {\n                    if (nextTextNode instanceof Text && !nextTextNode.data.startsWith(' ')) {\n                      nextTextNode.data = ` ${nextTextNode.data}`;\n                    }\n                  }\n                } else {\n                  // dirty hack\n                  if (!this.canIgnoreNode(nextTextNode)) {\n                    if (nextTextNode instanceof Text && !nextTextNode.data.startsWith(' ')) {\n                      nextTextNode.data = ` ${nextTextNode.data}`;\n                    }\n                  }\n                }\n              }\n            } else if (!this.spaceSensitiveTags.test(currentNode.nodeName)) {\n              if (currentTextNode instanceof Text && !currentTextNode.data.endsWith(' ')) {\n                currentTextNode.data = `${currentTextNode.data} `;\n              }\n            } else {\n              const panguSpace = document.createElement('pangu');\n              panguSpace.innerHTML = ' ';\n\n              // 避免一直被加空格\n              if (nextNode.parentNode) {\n                if (nextNode.previousSibling) {\n                  if (!this.spaceLikeTags.test(nextNode.previousSibling.nodeName)) {\n                    nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                  }\n                } else {\n                  nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                }\n              }\n\n              // TODO\n              // 主要是想要避免在元素（通常都是 <li>）的開頭加空格\n              // 這個做法有點蠢，但是不管還是先硬上\n              if (!panguSpace.previousElementSibling) {\n                if (panguSpace.parentNode) {\n                  panguSpace.parentNode.removeChild(panguSpace);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      nextTextNode = currentTextNode;\n    }\n  }\n\n  public stopAutoSpacingPage() {\n    if (this.autoSpacingPageObserver) {\n      this.autoSpacingPageObserver.disconnect();\n      this.autoSpacingPageObserver = null;\n    }\n\n    this.isAutoSpacingPageExecuted = false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected isContentEditable(node: any) {\n    return node.isContentEditable || (node.getAttribute && node.getAttribute('g_editable') === 'true');\n  }\n\n  protected isSpecificTag(node: Node, tagRegex: RegExp) {\n    return node && node.nodeName && tagRegex.test(node.nodeName);\n  }\n\n  protected isInsideSpecificTag(node: Node, tagRegex: RegExp, checkCurrent = false) {\n    let currentNode = node;\n    if (checkCurrent) {\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected hasIgnoredClass(node: Node) {\n    // Check the node itself if it's an element\n    if (node instanceof Element && node.classList.contains(this.ignoredClass)) {\n      return true;\n    }\n    // Check the parent node (for text nodes)\n    if (node.parentNode && node.parentNode instanceof Element && node.parentNode.classList.contains(this.ignoredClass)) {\n      return true;\n    }\n    return false;\n  }\n\n  protected canIgnoreNode(node: Node) {\n    let currentNode = node;\n    if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode) || this.hasIgnoredClass(currentNode))) {\n      // We will skip processing any children of ignored elements, so don't need to check all ancestors\n      return true;\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected isFirstTextChild(parentNode: Node, targetNode: Node) {\n    const { childNodes } = parentNode;\n\n    // 只判斷第一個含有 text 的 node\n    for (let i = 0; i < childNodes.length; i++) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n\n  protected isLastTextChild(parentNode: Node, targetNode: Node) {\n    const { childNodes } = parentNode;\n\n    // 只判斷倒數第一個含有 text 的 node\n    for (let i = childNodes.length - 1; i > -1; i--) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n\n  protected setupAutoSpacingPageObserver(nodeDelayMs: number, nodeMaxWaitMs: number) {\n    // Disconnect any existing auto-spacing observer\n    if (this.autoSpacingPageObserver) {\n      this.autoSpacingPageObserver.disconnect();\n      this.autoSpacingPageObserver = null;\n    }\n\n    const queue: Node[] = [];\n\n    const debouncedSpacingTitle = debounce(\n      () => {\n        this.spacingPageTitle();\n      },\n      nodeDelayMs,\n      nodeMaxWaitMs,\n    );\n\n    const debouncedSpacingNode = debounce(\n      () => {\n        // NOTE: a single node could be very big which contains a lot of child nodes\n        while (queue.length) {\n          const node = queue.shift();\n          if (node) {\n            this.spacingNode(node);\n          }\n        }\n      },\n      nodeDelayMs,\n      nodeMaxWaitMs,\n    );\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n    this.autoSpacingPageObserver = new MutationObserver((mutations) => {\n      let titleChanged = false;\n\n      // Element: https://developer.mozilla.org/en-US/docs/Web/API/Element\n      // Text: https://developer.mozilla.org/en-US/docs/Web/API/Text\n      for (const mutation of mutations) {\n        // Skip to avoid double processing - title handled separately by debouncedSpacingTitle()\n        if (mutation.target.parentNode?.nodeName === 'TITLE' || mutation.target.nodeName === 'TITLE') {\n          titleChanged = true;\n          continue;\n        }\n\n        // Queue parent elements for spacing processing\n        switch (mutation.type) {\n          case 'characterData':\n            // Text content changed (e.g., textContent = '新文字new text')\n            const { target: node } = mutation;\n            if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n              // <p>Hello 世界</p>\n              // \"Hello 世界\" is the text node, <p> is the parent element\n              queue.push(node.parentNode); // Queue parent element, not text node\n            }\n            break;\n          case 'childList':\n            // New nodes added to DOM (e.g., innerHTML change, appendChild)\n            for (const node of mutation.addedNodes) {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                queue.push(node); // Element added, process its text content\n              } else if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n                queue.push(node.parentNode); // Text node added, process its parent\n              }\n            }\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (titleChanged) {\n        debouncedSpacingTitle();\n      }\n\n      debouncedSpacingNode();\n    });\n\n    // NOTE: A single MutationObserver can observe multiple targets simultaneously\n    // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe:\n\n    // Observe page content changes\n    this.autoSpacingPageObserver.observe(document.body, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n\n    // Observe page title changes\n    this.autoSpacingPageObserver.observe(document.head, {\n      characterData: true,\n      childList: true,\n      subtree: true, // Need subtree to observe text node changes inside title\n    });\n  }\n}\n\nexport const pangu = new BrowserPangu();\n\nexport default pangu;\n"],"names":["node"],"mappings":";;;;AASA,SAAS,KAAwC,MAAS;AACxD,MAAI,WAAW;AACf,SAAO,YAAa,MAAqB;AACvC,QAAI,UAAU;AACL,aAAA;AAAA,IAAA;AAEE,eAAA;AACJ,WAAA,KAAK,GAAG,IAAI;AAAA,EACrB;AACF;AAGA,SAAS,SAA6C,MAAS,OAAe,eAAuB,UAAU;AAC7G,MAAI,QAAuB;AAC3B,MAAI,YAA2B;AAE/B,SAAO,YAAa,MAAqB;AACjC,UAAA,cAAc,KAAK,IAAI;AAE7B,QAAI,OAAO;AACT,mBAAa,KAAK;AAAA,IAAA;AAGpB,QAAI,CAAC,WAAW;AACF,kBAAA;AAAA,IAAA;AAGV,QAAA,cAAc,aAAa,cAAc;AAC3C,WAAK,GAAG,IAAI;AACA,kBAAA;AAAA,IAAA,OACP;AACG,cAAA,OAAO,WAAW,MAAM;AAC9B,aAAK,GAAG,IAAI;AAAA,SACX,KAAK;AAAA,IAAA;AAAA,EAEZ;AACF;AAEO,MAAM,qBAAqB,MAAM;AAAA,EAWtC,cAAc;AACN,UAAA;AAXD;AACG;AAEH;AACA;AACA;AACA;AACA;AACA;AAKL,SAAK,4BAA4B;AACjC,SAAK,0BAA0B;AAE/B,SAAK,YAAY;AACjB,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAC1B,SAAK,gBAAgB;AACrB,SAAK,qBAAqB;AAC1B,SAAK,eAAe;AAAA,EAAA;AAAA,EAGf,gBAAgB,EAAE,cAAc,KAAM,cAAc,KAAK,gBAAgB,IAAgC,IAAA,IAAI;AAC9G,QAAA,EAAE,SAAS,gBAAgB,OAAO;AACpC;AAAA,IAAA;AAGF,QAAI,KAAK,2BAA2B;AAClC;AAAA,IAAA;AAGF,SAAK,4BAA4B;AAI3B,UAAA,kBAAkB,KAAK,MAAM;AACjC,WAAK,YAAY;AAAA,IAAA,CAClB;AACK,UAAA,SAAS,SAAS,qBAAqB,OAAO;AAChD,QAAA,OAAO,WAAW,GAAG;AACvB,iBAAW,MAAM;AACC,wBAAA;AAAA,SACf,WAAW;AAAA,IAAA,OACT;AACL,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAChC,cAAA,QAAQ,OAAO,CAAC;AAClB,YAAA,MAAM,eAAe,GAAG;AAC1B,qBAAW,MAAM;AACC,4BAAA;AAAA,aACf,GAAI;AACP;AAAA,QAAA;AAEI,cAAA,iBAAiB,cAAc,MAAM;AACzC,qBAAW,MAAM;AACC,4BAAA;AAAA,aACf,GAAI;AAAA,QAAA,CACR;AAAA,MAAA;AAAA,IACH;AAGG,SAAA,6BAA6B,aAAa,aAAa;AAAA,EAAA;AAAA,EAGvD,cAAc;AACnB,SAAK,iBAAiB;AACtB,SAAK,gBAAgB;AAAA,EAAA;AAAA,EAGhB,mBAAmB;AACxB,UAAM,aAAa;AACd,SAAA,mBAAmB,YAAY,QAAQ;AAAA,EAAA;AAAA,EAGvC,kBAAkB;AA6BvB,QAAI,aAAa;AACjB,eAAW,OAAO,CAAC,UAAU,SAAS,UAAU,GAAG;AAIpC,mBAAA,GAAG,UAAU,oFAAoF,GAAG;AAAA,IAAA;AAE9G,SAAA,mBAAmB,YAAY,QAAQ;AAAA,EAAA;AAAA,EAGvC,YAAY,aAAmB;AAIpC,UAAM,aAAa;AACd,SAAA,mBAAmB,YAAY,WAAW;AAAA,EAAA;AAAA,EAG1C,mBAAmB,QAAgB;AAClC,UAAA,aAAa,OAAO,MAAM;AAC3B,SAAA,mBAAmB,YAAY,QAAQ;AAAA,EAAA;AAAA,EAGvC,0BAA0B,WAAmB;AAC5C,UAAA,aAAa,4DAA4D,SAAS;AACnF,SAAA,mBAAmB,YAAY,QAAQ;AAAA,EAAA;AAAA,EAGvC,wBAAwB,SAAiB;AACxC,UAAA,aAAa,KAAK,OAAO;AAC1B,SAAA,mBAAmB,YAAY,QAAQ;AAAA,EAAA;AAAA;AAAA,EAIvC,mBAAmB,YAAoB,aAAmB;AAE/D,QAAI,EAAE,uBAAuB,SAAS,uBAAuB,kBAAkB;AAC7E;AAAA,IAAA;AAOI,UAAA,YAAY,SAAS,SAAS,YAAY,aAAa,MAAM,YAAY,4BAA4B,IAAI;AAE3G,QAAA;AACJ,QAAI,eAA4B;AAGhC,aAAS,IAAI,UAAU,iBAAiB,GAAG,IAAI,IAAI,EAAE,GAAG;AACpC,wBAAA,UAAU,aAAa,CAAC;AAC1C,UAAI,CAAC,iBAAiB;AACpB;AAAA,MAAA;AAME,UAAA,KAAK,cAAc,eAAe,GAAG;AACxB,uBAAA;AACf;AAAA,MAAA;AAGF,UAAI,2BAA2B,MAAM;AAEnC,YAAI,gBAAgB,KAAK,WAAW,MAAM,gBAAgB,SAAS,OAAO,gBAAgB,SAAS,OAAO,gBAAgB,SAAS,MAAM;AAEvI,cAAI,gBAAgB,iBAAiB;AACnC,kBAAM,WAAW,gBAAgB;AACjC,gBAAI,SAAS,aAAa,KAAK,gBAAgB,SAAS,aAAa;AACnE,oBAAM,WAAW,SAAS,YAAY,MAAM,EAAE;AAE1C,kBAAA,kBAAkB,KAAK,QAAQ,GAAG;AACpB,gCAAA,OAAO,IAAI,gBAAgB,IAAI;AAAA,cAAA;AAAA,YACjD;AAAA,UACF;AAAA,QACF,OACK;AAEL,gBAAM,UAAU,KAAK,YAAY,gBAAgB,IAAI;AACjD,cAAA,gBAAgB,SAAS,SAAS;AACpC,4BAAgB,OAAO;AAAA,UAAA;AAAA,QACzB;AAAA,MACF;AAIF,UAAI,cAAc;AAIZ,YAAA,gBAAgB,eAAe,KAAK,cAAc,KAAK,gBAAgB,YAAY,QAAQ,GAAG;AACjF,yBAAA;AACf;AAAA,QAAA;AAIF,YAAI,EAAE,2BAA2B,SAAS,EAAE,wBAAwB,OAAO;AACzE;AAAA,QAAA;AAIF,cAAM,uBAAuB,gBAAgB,KAAK,SAAS,GAAG;AAC9D,cAAM,sBAAsB,aAAa,KAAK,WAAW,GAAG;AAG5D,YAAI,wBAAwB,qBAAqB;AAChC,yBAAA;AACf;AAAA,QAAA;AAGI,cAAA,WAAW,gBAAgB,KAAK,MAAM,EAAE,IAAI,aAAa,KAAK,MAAM,GAAG,CAAC;AACxE,cAAA,cAAc,KAAK,YAAY,QAAQ;AAG7C,cAAM,cAAc,gBAAgB,KAAK,MAAM,EAAE;AACjD,cAAM,YAAY,aAAa,KAAK,MAAM,GAAG,CAAC;AAC9C,cAAM,UAAU,CAAC,SAAiB,SAAS,OAAO,SAAS,OAAO,SAAS;AAC3E,cAAM,QAAQ,CAAC,SAAiB,kBAAkB,KAAK,IAAI;AAKrD,cAAA,cACH,QAAQ,WAAW,KAAK,MAAM,SAAS,KACvC,MAAM,WAAW,KAAK,QAAQ,SAAS;AAGtC,YAAA,gBAAgB,YAAY,CAAC,aAAa;AAK5C,cAAI,WAAiB;AACrB,iBAAO,SAAS,cAAc,CAAC,KAAK,mBAAmB,KAAK,SAAS,QAAQ,KAAK,KAAK,iBAAiB,SAAS,YAAY,QAAQ,GAAG;AACtI,uBAAW,SAAS;AAAA,UAAA;AAGtB,cAAI,cAAoB;AACxB,iBAAO,YAAY,cAAc,CAAC,KAAK,mBAAmB,KAAK,YAAY,QAAQ,KAAK,KAAK,gBAAgB,YAAY,YAAY,WAAW,GAAG;AACjJ,0BAAc,YAAY;AAAA,UAAA;AAG5B,cAAI,YAAY,aAAa;AAC3B,gBAAI,KAAK,cAAc,KAAK,YAAY,YAAY,QAAQ,GAAG;AAC9C,6BAAA;AACf;AAAA,YAAA;AAAA,UACF;AAGF,cAAI,CAAC,KAAK,UAAU,KAAK,YAAY,QAAQ,GAAG;AAC9C,gBAAI,CAAC,KAAK,mBAAmB,KAAK,SAAS,QAAQ,GAAG;AACpD,kBAAI,CAAC,KAAK,YAAY,KAAK,SAAS,QAAQ,KAAK,CAAC,KAAK,UAAU,KAAK,SAAS,QAAQ,GAAG;AACxF,oBAAI,aAAa,iBAAiB;AAChC,sBAAI,CAAC,KAAK,cAAc,KAAK,aAAa,gBAAgB,QAAQ,GAAG;AACnE,wBAAI,wBAAwB,QAAQ,CAAC,aAAa,KAAK,WAAW,GAAG,GAAG;AACzD,mCAAA,OAAO,IAAI,aAAa,IAAI;AAAA,oBAAA;AAAA,kBAC3C;AAAA,gBACF,OACK;AAEL,sBAAI,CAAC,KAAK,cAAc,YAAY,GAAG;AACrC,wBAAI,wBAAwB,QAAQ,CAAC,aAAa,KAAK,WAAW,GAAG,GAAG;AACzD,mCAAA,OAAO,IAAI,aAAa,IAAI;AAAA,oBAAA;AAAA,kBAC3C;AAAA,gBACF;AAAA,cACF;AAAA,YACF,WACS,CAAC,KAAK,mBAAmB,KAAK,YAAY,QAAQ,GAAG;AAC9D,kBAAI,2BAA2B,QAAQ,CAAC,gBAAgB,KAAK,SAAS,GAAG,GAAG;AAC1D,gCAAA,OAAO,GAAG,gBAAgB,IAAI;AAAA,cAAA;AAAA,YAChD,OACK;AACC,oBAAA,aAAa,SAAS,cAAc,OAAO;AACjD,yBAAW,YAAY;AAGvB,kBAAI,SAAS,YAAY;AACvB,oBAAI,SAAS,iBAAiB;AAC5B,sBAAI,CAAC,KAAK,cAAc,KAAK,SAAS,gBAAgB,QAAQ,GAAG;AACtD,6BAAA,WAAW,aAAa,YAAY,QAAQ;AAAA,kBAAA;AAAA,gBACvD,OACK;AACI,2BAAA,WAAW,aAAa,YAAY,QAAQ;AAAA,gBAAA;AAAA,cACvD;AAME,kBAAA,CAAC,WAAW,wBAAwB;AACtC,oBAAI,WAAW,YAAY;AACd,6BAAA,WAAW,YAAY,UAAU;AAAA,gBAAA;AAAA,cAC9C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAGa,qBAAA;AAAA,IAAA;AAAA,EACjB;AAAA,EAGK,sBAAsB;AAC3B,QAAI,KAAK,yBAAyB;AAChC,WAAK,wBAAwB,WAAW;AACxC,WAAK,0BAA0B;AAAA,IAAA;AAGjC,SAAK,4BAA4B;AAAA,EAAA;AAAA;AAAA,EAIzB,kBAAkB,MAAW;AACrC,WAAO,KAAK,qBAAsB,KAAK,gBAAgB,KAAK,aAAa,YAAY,MAAM;AAAA,EAAA;AAAA,EAGnF,cAAc,MAAY,UAAkB;AACpD,WAAO,QAAQ,KAAK,YAAY,SAAS,KAAK,KAAK,QAAQ;AAAA,EAAA;AAAA,EAGnD,oBAAoB,MAAY,UAAkB,eAAe,OAAO;AAChF,QAAI,cAAc;AAClB,QAAI,cAAc;AAChB,UAAI,KAAK,cAAc,aAAa,QAAQ,GAAG;AACtC,eAAA;AAAA,MAAA;AAAA,IACT;AAEF,WAAO,YAAY,YAAY;AAC7B,oBAAc,YAAY;AAC1B,UAAI,KAAK,cAAc,aAAa,QAAQ,GAAG;AACtC,eAAA;AAAA,MAAA;AAAA,IACT;AAEK,WAAA;AAAA,EAAA;AAAA,EAGC,gBAAgB,MAAY;AAEpC,QAAI,gBAAgB,WAAW,KAAK,UAAU,SAAS,KAAK,YAAY,GAAG;AAClE,aAAA;AAAA,IAAA;AAGL,QAAA,KAAK,cAAc,KAAK,sBAAsB,WAAW,KAAK,WAAW,UAAU,SAAS,KAAK,YAAY,GAAG;AAC3G,aAAA;AAAA,IAAA;AAEF,WAAA;AAAA,EAAA;AAAA,EAGC,cAAc,MAAY;AAClC,QAAI,cAAc;AAClB,QAAI,gBAAgB,KAAK,cAAc,aAAa,KAAK,WAAW,KAAK,KAAK,kBAAkB,WAAW,KAAK,KAAK,gBAAgB,WAAW,IAAI;AAE3I,aAAA;AAAA,IAAA;AAET,WAAO,YAAY,YAAY;AAC7B,oBAAc,YAAY;AACtB,UAAA,gBAAgB,KAAK,cAAc,aAAa,KAAK,WAAW,KAAK,KAAK,kBAAkB,WAAW,IAAI;AACtG,eAAA;AAAA,MAAA;AAAA,IACT;AAEK,WAAA;AAAA,EAAA;AAAA,EAGC,iBAAiB,YAAkB,YAAkB;AACvD,UAAA,EAAE,eAAe;AAGvB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACpC,YAAA,YAAY,WAAW,CAAC;AAC9B,UAAI,UAAU,aAAa,KAAK,gBAAgB,UAAU,aAAa;AACrE,eAAO,cAAc;AAAA,MAAA;AAAA,IACvB;AAEK,WAAA;AAAA,EAAA;AAAA,EAGC,gBAAgB,YAAkB,YAAkB;AACtD,UAAA,EAAE,eAAe;AAGvB,aAAS,IAAI,WAAW,SAAS,GAAG,IAAI,IAAI,KAAK;AACzC,YAAA,YAAY,WAAW,CAAC;AAC9B,UAAI,UAAU,aAAa,KAAK,gBAAgB,UAAU,aAAa;AACrE,eAAO,cAAc;AAAA,MAAA;AAAA,IACvB;AAEK,WAAA;AAAA,EAAA;AAAA,EAGC,6BAA6B,aAAqB,eAAuB;AAEjF,QAAI,KAAK,yBAAyB;AAChC,WAAK,wBAAwB,WAAW;AACxC,WAAK,0BAA0B;AAAA,IAAA;AAGjC,UAAM,QAAgB,CAAC;AAEvB,UAAM,wBAAwB;AAAA,MAC5B,MAAM;AACJ,aAAK,iBAAiB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,uBAAuB;AAAA,MAC3B,MAAM;AAEJ,eAAO,MAAM,QAAQ;AACb,gBAAA,OAAO,MAAM,MAAM;AACzB,cAAI,MAAM;AACR,iBAAK,YAAY,IAAI;AAAA,UAAA;AAAA,QACvB;AAAA,MAEJ;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAGA,SAAK,0BAA0B,IAAI,iBAAiB,CAAC,cAAc;;AACjE,UAAI,eAAe;AAInB,iBAAW,YAAY,WAAW;AAE5B,cAAA,cAAS,OAAO,eAAhB,mBAA4B,cAAa,WAAW,SAAS,OAAO,aAAa,SAAS;AAC7E,yBAAA;AACf;AAAA,QAAA;AAIF,gBAAQ,SAAS,MAAM;AAAA,UACrB,KAAK;AAEG,kBAAA,EAAE,QAAQ,KAAA,IAAS;AACzB,gBAAI,KAAK,aAAa,KAAK,aAAa,KAAK,YAAY;AAGjD,oBAAA,KAAK,KAAK,UAAU;AAAA,YAAA;AAE5B;AAAA,UACF,KAAK;AAEQA,uBAAAA,SAAQ,SAAS,YAAY;AAClCA,kBAAAA,MAAK,aAAa,KAAK,cAAc;AACvC,sBAAM,KAAKA,KAAI;AAAA,cAAA,WACNA,MAAK,aAAa,KAAK,aAAaA,MAAK,YAAY;AACxD,sBAAA,KAAKA,MAAK,UAAU;AAAA,cAAA;AAAA,YAC5B;AAEF;AAAA,QAEA;AAAA,MACJ;AAGF,UAAI,cAAc;AACM,8BAAA;AAAA,MAAA;AAGH,2BAAA;AAAA,IAAA,CACtB;AAMI,SAAA,wBAAwB,QAAQ,SAAS,MAAM;AAAA,MAClD,eAAe;AAAA,MACf,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV;AAGI,SAAA,wBAAwB,QAAQ,SAAS,MAAM;AAAA,MAClD,eAAe;AAAA,MACf,WAAW;AAAA,MACX,SAAS;AAAA;AAAA,IAAA,CACV;AAAA,EAAA;AAEL;AAEa,MAAA,QAAQ,IAAI,aAAa;"}